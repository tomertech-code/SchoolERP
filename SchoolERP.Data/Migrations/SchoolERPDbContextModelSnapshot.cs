// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolERP.Data.DbContext;

#nullable disable

namespace SchoolERP.Data.Migrations
{
    [DbContext(typeof(SchoolERPDbContext))]
    partial class SchoolERPDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.ActivityLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<string>("Action")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ActionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Ipaddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IPAddress");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LogId")
                        .HasName("PK__Activity__5E548648D837BC40");

                    b.HasIndex("UserId");

                    b.ToTable("ActivityLogs");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Assignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentId"));

                    b.Property<DateOnly?>("AssignedDate")
                        .HasColumnType("date");

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("DueDate")
                        .HasColumnType("date");

                    b.Property<int?>("SectionId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("AssignmentId")
                        .HasName("PK__Assignme__32499E77ED3A1BF3");

                    b.HasIndex("ClassId");

                    b.HasIndex("SectionId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.AssignmentSubmission", b =>
                {
                    b.Property<int>("SubmissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubmissionId"));

                    b.Property<int?>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("Marks")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<string>("Remark")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("SubmittedDate")
                        .HasColumnType("date");

                    b.HasKey("SubmissionId")
                        .HasName("PK__Assignme__449EE12544AEC366");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("StudentId");

                    b.ToTable("AssignmentSubmissions");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceId"));

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Remark")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("AttendanceId")
                        .HasName("PK__Attendan__8B69261C26967CC8");

                    b.HasIndex("StudentId");

                    b.ToTable("Attendance");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<string>("Author")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Isbn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ISBN");

                    b.Property<string>("Publisher")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("BookId")
                        .HasName("PK__Books__3DE0C20783FE5393");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.BookIssue", b =>
                {
                    b.Property<int>("IssueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IssueId"));

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("DueDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("IssueDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("ReturnDate")
                        .HasColumnType("date");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("IssueId")
                        .HasName("PK__BookIssu__6C861604DA26F8EF");

                    b.HasIndex("BookId");

                    b.HasIndex("StudentId");

                    b.ToTable("BookIssues");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Bus", b =>
                {
                    b.Property<int>("BusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusId"));

                    b.Property<string>("BusNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DriverName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DriverPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Route")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("BusId")
                        .HasName("PK__Buses__6A0F60B57157FBAC");

                    b.ToTable("Buses");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ClassId")
                        .HasName("PK__Classes__CB1927C03BE7400D");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.ComplaintCategory", b =>
                {
                    b.Property<int>("ComplaintCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComplaintCategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("ComplaintCategoryId")
                        .HasName("PK__Complain__F5043A62864D97D7");

                    b.ToTable("ComplaintCategories");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("EventDate")
                        .HasColumnType("date");

                    b.Property<string>("OrganizedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("EventId")
                        .HasName("PK__Events__7944C81084E15080");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamId"));

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("ExamName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ExamTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("ExamId")
                        .HasName("PK__Exams__297521C727D286E1");

                    b.HasIndex("ClassId");

                    b.HasIndex("ExamTypeId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.ExamResult", b =>
                {
                    b.Property<int>("ResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResultId"));

                    b.Property<int?>("ExamId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MarksObtained")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal?>("MaxMarks")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("ResultId")
                        .HasName("PK__ExamResu__9769020873A215B9");

                    b.HasIndex("ExamId");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("ExamResults");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.ExamType", b =>
                {
                    b.Property<int>("ExamTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamTypeId"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ExamName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("ExamTypeId")
                        .HasName("PK__ExamType__087D50F00A3D757B");

                    b.ToTable("ExamTypes");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.FeePayment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<int?>("FeeId")
                        .HasColumnType("int");

                    b.Property<string>("Mode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("PaidAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateOnly?>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("PaymentId")
                        .HasName("PK__FeePayme__9B556A383E1350A4");

                    b.HasIndex("FeeId");

                    b.HasIndex("StudentId");

                    b.ToTable("FeePayments");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.FeeStructure", b =>
                {
                    b.Property<int>("FeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeeId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("FeeType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("FeeId")
                        .HasName("PK__FeeStruc__B387B229020CC1B6");

                    b.HasIndex("ClassId");

                    b.ToTable("FeeStructures");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Hostel", b =>
                {
                    b.Property<int>("HostelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HostelId"));

                    b.Property<string>("HostelName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("WardenName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("HostelId")
                        .HasName("PK__Hostels__677EEB28AB6487A5");

                    b.ToTable("Hostels");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.HostelAllocation", b =>
                {
                    b.Property<int>("AllocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AllocationId"));

                    b.Property<DateOnly?>("AllocationDate")
                        .HasColumnType("date");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("AllocationId")
                        .HasName("PK__HostelAl__B3C6D64B28CBE5F5");

                    b.HasIndex("RoomId");

                    b.HasIndex("StudentId");

                    b.ToTable("HostelAllocations");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.HostelRoom", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<int?>("Capacity")
                        .HasColumnType("int");

                    b.Property<int?>("HostelId")
                        .HasColumnType("int");

                    b.Property<string>("RoomNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("RoomId")
                        .HasName("PK__HostelRo__328639391C30627A");

                    b.HasIndex("HostelId");

                    b.ToTable("HostelRooms");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Notice", b =>
                {
                    b.Property<int>("NoticeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NoticeId"));

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("NoticeDate")
                        .HasColumnType("date");

                    b.Property<int?>("TargetRoleId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("NoticeId")
                        .HasName("PK__Notices__CE83CBE5A44417B6");

                    b.HasIndex("TargetRoleId");

                    b.ToTable("Notices");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Parent", b =>
                {
                    b.Property<int>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParentId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FatherName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MotherName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ParentId")
                        .HasName("PK__Parents__D339516FD35126D2");

                    b.HasIndex("UserId");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.ParentStudent", b =>
                {
                    b.Property<int>("ParentStudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParentStudentId"));

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("ParentStudentId")
                        .HasName("PK__ParentSt__6B892BA4719390B2");

                    b.HasIndex("ParentId");

                    b.HasIndex("StudentId");

                    b.ToTable("ParentStudent");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Payroll", b =>
                {
                    b.Property<int>("PayrollId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayrollId"));

                    b.Property<decimal?>("Allowances")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("BasicSalary")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("Deductions")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("MonthYear")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("NetSalary")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateOnly?>("PaidDate")
                        .HasColumnType("date");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("PayrollId")
                        .HasName("PK__Payroll__99DFC672E8C16BD7");

                    b.HasIndex("StaffId");

                    b.ToTable("Payroll");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Period", b =>
                {
                    b.Property<int>("PeriodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeriodId"));

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("PeriodName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("PeriodId")
                        .HasName("PK__Periods__E521BB169630DB44");

                    b.ToTable("Periods");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Ptm", b =>
                {
                    b.Property<int>("Ptmid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PTMId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ptmid"));

                    b.Property<string>("Agenda")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MeetingDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Ptmid")
                        .HasName("PK__PTM__74F26DD8D51FCF74");

                    b.HasIndex("ClassId");

                    b.HasIndex("TeacherId");

                    b.ToTable("PTM");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Ptmfeedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<string>("FeedbackText")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("Ptmid")
                        .HasColumnType("int")
                        .HasColumnName("PTMId");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("FeedbackId")
                        .HasName("PK__PTMFeedb__6A4BEDD6B7FA58A2");

                    b.HasIndex("ParentId");

                    b.HasIndex("Ptmid");

                    b.HasIndex("StudentId");

                    b.ToTable("PTMFeedback");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE1A9332CB11");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Section", b =>
                {
                    b.Property<int>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SectionId"));

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("SectionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SectionId")
                        .HasName("PK__Sections__80EF087235A48325");

                    b.HasIndex("ClassId");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"));

                    b.Property<DateOnly?>("HireDate")
                        .HasColumnType("date");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StaffName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("StaffId")
                        .HasName("PK__Staff__96D4AB17F3290D20");

                    b.HasIndex("UserId");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AdmissionNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("DOB");

                    b.Property<DateOnly?>("EnrollmentDate")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SectionId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("StudentId")
                        .HasName("PK__Students__32C52B99E05E840F");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "AdmissionNo" }, "UQ__Students__C97E2711741708FD")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.StudentComplaint", b =>
                {
                    b.Property<int>("ComplaintId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComplaintId"));

                    b.Property<int?>("ComplaintCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ComplaintDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ComplaintText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComplaintTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ResolutionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResolvedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ResolvedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Pending");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("ComplaintId")
                        .HasName("PK__StudentC__740D898F63A59E5A");

                    b.HasIndex("ComplaintCategoryId");

                    b.HasIndex("ResolvedBy");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("StudentComplaints");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.StudentTransport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BusId")
                        .HasColumnType("int");

                    b.Property<string>("DropPoint")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PickupPoint")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__StudentT__3214EC07084C47C2");

                    b.HasIndex("BusId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentTransport");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SubjectId")
                        .HasName("PK__Subjects__AC1BA3A8E79D4A86");

                    b.HasIndex("ClassId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("HireDate")
                        .HasColumnType("date");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TeacherId")
                        .HasName("PK__Teachers__EDF259641B008A31");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.TeacherAttendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceId"));

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Remark")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("AttendanceId")
                        .HasName("PK__TeacherA__8B69261CC672BC6A");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherAttendance");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Timetable", b =>
                {
                    b.Property<int>("TimetableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimetableId"));

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("DayOfWeek")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("PeriodId")
                        .HasColumnType("int");

                    b.Property<int?>("SectionId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("TimetableId")
                        .HasName("PK__Timetabl__68413F60EB06E7B1");

                    b.HasIndex("ClassId");

                    b.HasIndex("PeriodId");

                    b.HasIndex("SectionId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Timetable");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4C19A04FD7");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Username" }, "UQ__Users__536C85E44F620A8A")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolERP.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.ActivityLog", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.User", "User")
                        .WithMany("ActivityLogs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__ActivityL__UserI__236943A5");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Assignment", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.Class", "Class")
                        .WithMany("Assignments")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK__Assignmen__Class__7B5B524B");

                    b.HasOne("SchoolERP.Data.Entities.Section", "Section")
                        .WithMany("Assignments")
                        .HasForeignKey("SectionId")
                        .HasConstraintName("FK__Assignmen__Secti__7C4F7684");

                    b.HasOne("SchoolERP.Data.Entities.Subject", "Subject")
                        .WithMany("Assignments")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK__Assignmen__Subje__7D439ABD");

                    b.HasOne("SchoolERP.Data.Entities.Teacher", "Teacher")
                        .WithMany("Assignments")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK__Assignmen__Teach__7E37BEF6");

                    b.Navigation("Class");

                    b.Navigation("Section");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.AssignmentSubmission", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.Assignment", "Assignment")
                        .WithMany("AssignmentSubmissions")
                        .HasForeignKey("AssignmentId")
                        .HasConstraintName("FK__Assignmen__Assig__01142BA1");

                    b.HasOne("SchoolERP.Data.Entities.Student", "Student")
                        .WithMany("AssignmentSubmissions")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__Assignmen__Stude__02084FDA");

                    b.Navigation("Assignment");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Attendance", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.Student", "Student")
                        .WithMany("Attendances")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__Attendanc__Stude__5441852A");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.BookIssue", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.Book", "Book")
                        .WithMany("BookIssues")
                        .HasForeignKey("BookId")
                        .HasConstraintName("FK__BookIssue__BookI__114A936A");

                    b.HasOne("SchoolERP.Data.Entities.Student", "Student")
                        .WithMany("BookIssues")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__BookIssue__Stude__123EB7A3");

                    b.Navigation("Book");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Exam", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.Class", "Class")
                        .WithMany("Exams")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK__Exams__ClassId__5BE2A6F2");

                    b.HasOne("SchoolERP.Data.Entities.ExamType", "ExamType")
                        .WithMany("Exams")
                        .HasForeignKey("ExamTypeId")
                        .HasConstraintName("FK_Exams_ExamTypes");

                    b.Navigation("Class");

                    b.Navigation("ExamType");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.ExamResult", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.Exam", "Exam")
                        .WithMany("ExamResults")
                        .HasForeignKey("ExamId")
                        .HasConstraintName("FK__ExamResul__ExamI__5EBF139D");

                    b.HasOne("SchoolERP.Data.Entities.Student", "Student")
                        .WithMany("ExamResults")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__ExamResul__Stude__5FB337D6");

                    b.HasOne("SchoolERP.Data.Entities.Subject", "Subject")
                        .WithMany("ExamResults")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK__ExamResul__Subje__60A75C0F");

                    b.Navigation("Exam");

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.FeePayment", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.FeeStructure", "Fee")
                        .WithMany("FeePayments")
                        .HasForeignKey("FeeId")
                        .HasConstraintName("FK__FeePaymen__FeeId__6754599E");

                    b.HasOne("SchoolERP.Data.Entities.Student", "Student")
                        .WithMany("FeePayments")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__FeePaymen__Stude__66603565");

                    b.Navigation("Fee");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.FeeStructure", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.Class", "Class")
                        .WithMany("FeeStructures")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK__FeeStruct__Class__6383C8BA");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.HostelAllocation", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.HostelRoom", "Room")
                        .WithMany("HostelAllocations")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("FK__HostelAll__RoomI__1AD3FDA4");

                    b.HasOne("SchoolERP.Data.Entities.Student", "Student")
                        .WithMany("HostelAllocations")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__HostelAll__Stude__19DFD96B");

                    b.Navigation("Room");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.HostelRoom", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.Hostel", "Hostel")
                        .WithMany("HostelRooms")
                        .HasForeignKey("HostelId")
                        .HasConstraintName("FK__HostelRoo__Hoste__17036CC0");

                    b.Navigation("Hostel");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Notice", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.Role", "TargetRole")
                        .WithMany("Notices")
                        .HasForeignKey("TargetRoleId")
                        .HasConstraintName("FK__Notices__TargetR__06CD04F7");

                    b.Navigation("TargetRole");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Parent", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.User", "User")
                        .WithMany("Parents")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Parents__UserId__4222D4EF");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.ParentStudent", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.Parent", "Parent")
                        .WithMany("ParentStudents")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK__ParentStu__Paren__44FF419A");

                    b.HasOne("SchoolERP.Data.Entities.Student", "Student")
                        .WithMany("ParentStudents")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__ParentStu__Stude__45F365D3");

                    b.Navigation("Parent");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Payroll", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.Staff", "Staff")
                        .WithMany("Payrolls")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK__Payroll__StaffId__208CD6FA");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Ptm", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.Class", "Class")
                        .WithMany("Ptms")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK__PTM__ClassId__6A30C649");

                    b.HasOne("SchoolERP.Data.Entities.Teacher", "Teacher")
                        .WithMany("Ptms")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK__PTM__TeacherId__6B24EA82");

                    b.Navigation("Class");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Ptmfeedback", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.Parent", "Parent")
                        .WithMany("Ptmfeedbacks")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK__PTMFeedba__Paren__6EF57B66");

                    b.HasOne("SchoolERP.Data.Entities.Ptm", "Ptm")
                        .WithMany("Ptmfeedbacks")
                        .HasForeignKey("Ptmid")
                        .HasConstraintName("FK__PTMFeedba__PTMId__6E01572D");

                    b.HasOne("SchoolERP.Data.Entities.Student", "Student")
                        .WithMany("Ptmfeedbacks")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__PTMFeedba__Stude__6FE99F9F");

                    b.Navigation("Parent");

                    b.Navigation("Ptm");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Section", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.Class", "Class")
                        .WithMany("Sections")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK__Sections__ClassI__4AB81AF0");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Staff", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.User", "User")
                        .WithMany("Staff")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Staff__UserId__1DB06A4F");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Student", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.User", "User")
                        .WithMany("Students")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Students__UserId__3F466844");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.StudentComplaint", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.ComplaintCategory", "ComplaintCategory")
                        .WithMany("StudentComplaints")
                        .HasForeignKey("ComplaintCategoryId")
                        .HasConstraintName("FK_StudentComplaints_ComplaintCategories");

                    b.HasOne("SchoolERP.Data.Entities.User", "ResolvedByNavigation")
                        .WithMany("StudentComplaints")
                        .HasForeignKey("ResolvedBy")
                        .HasConstraintName("FK__StudentCo__Resol__2B0A656D");

                    b.HasOne("SchoolERP.Data.Entities.Student", "Student")
                        .WithMany("StudentComplaints")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__StudentCo__Stude__2739D489");

                    b.HasOne("SchoolERP.Data.Entities.Teacher", "Teacher")
                        .WithMany("StudentComplaints")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK__StudentCo__Teach__282DF8C2");

                    b.Navigation("ComplaintCategory");

                    b.Navigation("ResolvedByNavigation");

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.StudentTransport", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.Bus", "Bus")
                        .WithMany("StudentTransports")
                        .HasForeignKey("BusId")
                        .HasConstraintName("FK__StudentTr__BusId__0C85DE4D");

                    b.HasOne("SchoolERP.Data.Entities.Student", "Student")
                        .WithMany("StudentTransports")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__StudentTr__Stude__0B91BA14");

                    b.Navigation("Bus");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Subject", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.Class", "Class")
                        .WithMany("Subjects")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK__Subjects__ClassI__4D94879B");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Teacher", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.Subject", "Subject")
                        .WithMany("Teachers")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK__Teachers__Subjec__5165187F");

                    b.HasOne("SchoolERP.Data.Entities.User", "User")
                        .WithMany("Teachers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Teachers__UserId__5070F446");

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.TeacherAttendance", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.Teacher", "Teacher")
                        .WithMany("TeacherAttendances")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK__TeacherAt__Teach__5812160E");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Timetable", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.Class", "Class")
                        .WithMany("Timetables")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK__Timetable__Class__74AE54BC");

                    b.HasOne("SchoolERP.Data.Entities.Period", "Period")
                        .WithMany("Timetables")
                        .HasForeignKey("PeriodId")
                        .HasConstraintName("FK__Timetable__Perio__787EE5A0");

                    b.HasOne("SchoolERP.Data.Entities.Section", "Section")
                        .WithMany("Timetables")
                        .HasForeignKey("SectionId")
                        .HasConstraintName("FK__Timetable__Secti__75A278F5");

                    b.HasOne("SchoolERP.Data.Entities.Subject", "Subject")
                        .WithMany("Timetables")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK__Timetable__Subje__76969D2E");

                    b.HasOne("SchoolERP.Data.Entities.Teacher", "Teacher")
                        .WithMany("Timetables")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK__Timetable__Teach__778AC167");

                    b.Navigation("Class");

                    b.Navigation("Period");

                    b.Navigation("Section");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.User", b =>
                {
                    b.HasOne("SchoolERP.Data.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__Users__RoleId__3A81B327");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Assignment", b =>
                {
                    b.Navigation("AssignmentSubmissions");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Book", b =>
                {
                    b.Navigation("BookIssues");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Bus", b =>
                {
                    b.Navigation("StudentTransports");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Class", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Exams");

                    b.Navigation("FeeStructures");

                    b.Navigation("Ptms");

                    b.Navigation("Sections");

                    b.Navigation("Subjects");

                    b.Navigation("Timetables");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.ComplaintCategory", b =>
                {
                    b.Navigation("StudentComplaints");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Exam", b =>
                {
                    b.Navigation("ExamResults");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.ExamType", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.FeeStructure", b =>
                {
                    b.Navigation("FeePayments");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Hostel", b =>
                {
                    b.Navigation("HostelRooms");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.HostelRoom", b =>
                {
                    b.Navigation("HostelAllocations");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Parent", b =>
                {
                    b.Navigation("ParentStudents");

                    b.Navigation("Ptmfeedbacks");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Period", b =>
                {
                    b.Navigation("Timetables");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Ptm", b =>
                {
                    b.Navigation("Ptmfeedbacks");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Role", b =>
                {
                    b.Navigation("Notices");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Section", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Timetables");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Staff", b =>
                {
                    b.Navigation("Payrolls");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Student", b =>
                {
                    b.Navigation("AssignmentSubmissions");

                    b.Navigation("Attendances");

                    b.Navigation("BookIssues");

                    b.Navigation("ExamResults");

                    b.Navigation("FeePayments");

                    b.Navigation("HostelAllocations");

                    b.Navigation("ParentStudents");

                    b.Navigation("Ptmfeedbacks");

                    b.Navigation("StudentComplaints");

                    b.Navigation("StudentTransports");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Subject", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("ExamResults");

                    b.Navigation("Teachers");

                    b.Navigation("Timetables");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.Teacher", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Ptms");

                    b.Navigation("StudentComplaints");

                    b.Navigation("TeacherAttendances");

                    b.Navigation("Timetables");
                });

            modelBuilder.Entity("SchoolERP.Data.Entities.User", b =>
                {
                    b.Navigation("ActivityLogs");

                    b.Navigation("Parents");

                    b.Navigation("Staff");

                    b.Navigation("StudentComplaints");

                    b.Navigation("Students");

                    b.Navigation("Teachers");
                });
#pragma warning restore 612, 618
        }
    }
}
